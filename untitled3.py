# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1r71OZ7ITKIpuvso_izi1LoeqG_XCV3uC
"""

import tensorflow as tf
from tensorflow import keras
import numpy as np
import matplotlib.pyplot as plt

"""# data generation
y = x^2 + 5 * x + 3
"""

x = np.arange(-80, 81, 0.5)
y = x ** 2 + 5 * x + 3
y.shape

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2)
x_train.shape, x_test.shape



"""#1. model definition

"""

model_1 = keras.Sequential()
model_1.add(keras.layers.Dense(units= 1024, activation='relu', input_shape= [1]))
model_1.add(keras.layers.Dense(units=1))

model_1.compile(optimizer='adam', loss='mean_squared_error')
model_1.summary()

hist_1 = model_1.fit(x_train, y_train, batch_size=64, epochs=1000)



"""#2. Model_2"""

model_2 = keras.Sequential()
model_2.add(keras.layers.Dense(units = 256, activation='relu',input_shape=[1]))
model_2.add(keras.layers.Dense(units = 256, activation='relu'))
model_2.add(keras.layers.Dense(units = 256, activation='relu'))
model_2.add(keras.layers.Dense(units = 256, activation='relu'))
model_2.add(keras.layers.Dense(units = 1))

model_2.compile(optimizer='adam', loss='mean_squared_error')
model_2.summary()

model_2.fit(x_train, y_train, batch_size=64,epochs=1000)



"""# comparison"""

y_pred_1 = model_1.predict(x_test)
y_pred_2 = model_2.predict(x_test)

plt.scatter(x_test, y_test, color='red', linewidths=3)
plt.scatter(x_test, y_pred_1, color='blue')
plt.scatter(x_test, y_pred_2, color='green')
plt.show()

plt.plot(hist_1.history['loss'][800:])
plt.show()